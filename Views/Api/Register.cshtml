
@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>

<div class="row">
    <div class="col-3"></div>
    <div class="col-6">
        <form id="userForm">
            <div class="mb-3">
                <label for="userName" class="form-label">姓名：</label>
                <input type="text" class="form-control" id="userName" name="Name">
            </div>
            <div class="mb-3">
                <label for="UserEmail" class="form-label">電子郵件：</label>
                <input type="email" class="form-control" id="UserEmail" name="Email">
            </div>
            <div class="mb-3">
                <label for="userAge" class="form-label">年紀：</label>
                <input type="number" class="form-control" id="userAge" name="Age">
            </div>
            <div class="mb-3">
                <label for="userAvatar"  class="custom-file-label">頭像:</label>
                <input type="file" class="custom-file-input" id="userAvatar" name="avatar">
            </div>


            <button id="button1" type="submit" class="btn btn-primary">送出</button>
        </form>
        <div class="alert alert-info" id="div1"></div>
    </div>
    <div class="col-3">
    </div>
</div>


@section Scripts {
    <script>
        // const btn = document.querySelector('#button1');
        // const texName = document.querySelector('#userName');
        // const texEmail = document.querySelector('#userEmail');
        // const texAge = document.querySelector('#userAge');
        const divInfo = document.querySelector('#div1');
        const theForm = document.querySelector('#userForm');
     

        btn.addEventListener('click', event => {
            event.preventDefault();//防止submit送出功能

            //透過FormData物件讀取資料
            const formData = new FormData(theForm);

            //傳送 FormData 給API – HTTP POST
            const url = '@Url.Content("~/api/register")';
            const response = fetch(url, {
                method: 'POST',
                body: formData
            });
            const datas = response.text();
            divInfo.innerHTML = datas;

        });


        // formData.append('City', "中壢");

        // for (const pair of formData.entries()) {
        //     console.log(pair[0] + ', ' + pair[1]);
        // }
            // console.log(texName.value);
            // console.log(texEmail.value);
            // console.log(texAge.value);

            let url = `@Url.Content("~/api/register")?name=${txtName.value}&age=${txtAge.value}&email=${txtMail.value}`;
            const response = await fetch(url)
            const datas = await response.text()
            divInfo.innerHTML = datas;


        // const fetch = (...args) => import('node-fetch').then(({ default: fetch }) => fetch(...args));
        // (async () => {
        //     //const url = '@Url.Content("~/api/register")?name=Tom&age=30';
        //     const url = '@Url.Content("~/api/register")';
        //     const response = await fetch(url);
        //     const datas = await response.text();
        //     console.log(datas);

        // })();


        dataContainer.innerHTML = htmlContent;
    </script>
}
